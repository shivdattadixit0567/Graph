Eventual Safe State :-

all state that ends at the terminal node or they are terminal node
using topological sort

Code :-

    vector<int> eventualSafeNodes(int V, vector<int> adj[]) {
        // code here
        vector<int> adjRev[V];
        
        vector<int> indegree(V,0);
        
        for(int i=0;i<V;i++){
            for(auto it:adj[i]){
                adjRev[it].push_back(i);
                
                indegree[i]++;
            }
        }
        
        queue<int> q;
        
        for(int i=0;i<V;i++){
            if(indegree[i]==0) q.push(i);
        }
        
        vector<int> safeState;
        
        while(!q.empty()){
            int node = q.front();
            q.pop();
            safeState.push_back(node);
            
            for(auto c: adjRev[node]){
                indegree[c]--;
                if(indegree[c]==0) q.push(c);
            }
        }
        
        sort(safeState.begin(),safeState.end());
        return safeState;
    }