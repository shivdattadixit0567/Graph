Topological sorting using BFS :-


CODE :-


	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // indegree of a node
	    vector<int> id(V);
	    for(int i=0; i <V;i++){
	        for(auto it:adj[i]){
	            id[it]++;
	        }
	    }
	    
	    queue<int> q;
	    
	    for(int i=0;i<V;i++){
	        if(id[i]==0){
	            q.push(i);
	        }
	    }
	    
	    vector<int> topo;
	    
	    while(!q.empty()){
	        int node = q.front();
	        q.pop();
	        
	        topo.push_back(node);
	        
	        // node is inserted in toposort
	        // so remove from indegree
	        
	        for(auto it:adj[node]){
	            id[it]--;
	            
	            if(id[it]==0) q.push(it);
	        }
	    }
		
	// we can detect cycle using this algorithm

	    if(topo.size()==N) return false;
	    return true;

	    return topo;
	}